graph = [[1, 2], [2, 3], [1, 3], [1, 4], [3, 4], [2, 5], [3, 5], [4, 5]]
weights = {(1, 2): 20, (2, 3): 40, (1, 3): 30, (1, 4): 10, (3, 4): 10, (2, 5): 30, (3, 5): 20, (4, 5): 20}

istok = 1
stok = 5

answer = 0
end = False

while not end:
    current_peak = istok
    сurrent_edge = [0, 0]
    current_flow = 0
    passed_edges = []
    passed_peaks = [current_peak]

    while current_peak != stok:
        banned_peaks = {}
        current_max = 0
        for i in weights.keys():
            if i[0] == current_peak and weights[i] > current_max and i[1] not in passed_peaks:
                if banned_peaks.get(i[0]) is not None:
                    if i[1] in banned_peaks[i[0]]:
                        continue
                current_max = weights[i]
                current_edge = list(i)
        if current_max == 0:
            if current_peak == istok:
                end = True
                break
            else:
                if passed_edges[-1][0] not in banned_peaks:
                    banned_peaks[passed_edges[-1][0]] = []
                banned_peaks[passed_edges[-1][0]].append(current_peak)
                current_peak = passed_edges[-1][0]
                passed_edges.pop()
        else:
            current_peak = current_edge[1]
            passed_peaks.append(current_peak)
            passed_edges.append(tuple(current_edge))
            if current_flow == 0:
                current_flow = current_max
            current_flow = min(current_flow, current_max)

    answer += current_flow
    for i in passed_edges:
        weights[i] -= current_flow
        if weights[i] == 0:
            weights.pop(i)
        if tuple([i[1], i[0]]) not in weights:
            weights[tuple([i[1], i[0]])] = 0
        weights[tuple([i[1], i[0]])] += current_flow


print(answer)
